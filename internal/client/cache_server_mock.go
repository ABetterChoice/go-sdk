// Code generated by MockGen. DO NOT EDIT.
// Source: cache_server.go

// Package client is a generated GoMock package.
package client

import (
	context "context"
	reflect "reflect"

	protoc_cache_server "github.com/abetterchoice/protoc_cache_server"
	gomock "github.com/golang/mock/gomock"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// BatchGetExperimentBucketInfo mocks base method.
func (m *MockClient) BatchGetExperimentBucketInfo(ctx context.Context, req *protoc_cache_server.BatchGetExperimentBucketReq) (*protoc_cache_server.BatchGetExperimentBucketResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchGetExperimentBucketInfo", ctx, req)
	ret0, _ := ret[0].(*protoc_cache_server.BatchGetExperimentBucketResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BatchGetExperimentBucketInfo indicates an expected call of BatchGetExperimentBucketInfo.
func (mr *MockClientMockRecorder) BatchGetExperimentBucketInfo(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchGetExperimentBucketInfo", reflect.TypeOf((*MockClient)(nil).BatchGetExperimentBucketInfo), ctx, req)
}

// BatchGetGroupBucketInfo mocks base method.
func (m *MockClient) BatchGetGroupBucketInfo(ctx context.Context, req *protoc_cache_server.BatchGetGroupBucketReq) (*protoc_cache_server.BatchGetGroupBucketResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchGetGroupBucketInfo", ctx, req)
	ret0, _ := ret[0].(*protoc_cache_server.BatchGetGroupBucketResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BatchGetGroupBucketInfo indicates an expected call of BatchGetGroupBucketInfo.
func (mr *MockClientMockRecorder) BatchGetGroupBucketInfo(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchGetGroupBucketInfo", reflect.TypeOf((*MockClient)(nil).BatchGetGroupBucketInfo), ctx, req)
}

// GetTabConfigData mocks base method.
func (m *MockClient) GetTabConfigData(ctx context.Context, req *protoc_cache_server.GetTabConfigReq) (*protoc_cache_server.GetTabConfigResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTabConfigData", ctx, req)
	ret0, _ := ret[0].(*protoc_cache_server.GetTabConfigResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTabConfigData indicates an expected call of GetTabConfigData.
func (mr *MockClientMockRecorder) GetTabConfigData(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTabConfigData", reflect.TypeOf((*MockClient)(nil).GetTabConfigData), ctx, req)
}
